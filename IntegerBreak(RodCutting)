//unbounded Knapsack problem
class Solution {
public:
    int integerBreak(int n) {
        //suppose rod of length n
        vector<int>dp(n+1,INT_MIN);
        dp[0]=0;
        dp[1]=0;
    
    for(int i=2;i<n+1;i++)      // total length of rod
    {
        for(int j=1;j<n+1;j++)       //length of one part of rod
        {
            if(j<=i)
            //whether to divide the remaining length into sub lengths or not
            // if dp[i-j] > i-j  -->>   divide the sublength (i-j) into more 
            //else  use(i-j)
            // agr total len 5 hai to ek part 3 or ek part 2 length ka hua agr 2 length ko divide krne p max prod 2 se jyada h to we will use that otherwise not
            dp[i] = max(dp[i] , max(j*dp[i-j] , j*(i-j)) );
        }
    }
        
        return dp[n];
    }
};
