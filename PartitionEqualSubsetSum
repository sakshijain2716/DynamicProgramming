class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int n = nums.size();
        int sum = accumulate(nums.begin(),nums.end(),0);

        if(sum%2!=0)    //cannot divide sum into two parts
        return false;
        int s = sum/2;

        vector<vector<int>>dp(n+1 , vector<int>(s+1,0));
        for(int i=0;i<n+1;i++)
        dp[i][0] = 1;
        for(int i=1;i<n+1;i++)
        {
            for(int j=1;j<s+1;j++)
            {
                if(nums[i-1]<=j)
                dp[i][j] = dp[i-1][j] || dp[i-1][j-nums[i-1]];
                else
                dp[i][j] = dp[i-1][j];
            }
        }
        return dp[n][s];    
    }
};
